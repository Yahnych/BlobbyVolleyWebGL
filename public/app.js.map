{"version":3,"sources":["app/assetManager.js","app/ball.js","app/blob.js","app/eventEmitter.js","app/field.js","app/keycodeDictionary.js","app/libs/THREEx.KeyboardState.js","app/main.js","app/party.js","app/physics.js","app/player.js","app/rules.js","app/screensManager.js","app/sound.js"],"names":["AssetManager","assets","loadingManager","LoadingManager","onLoad","_loaded","bind","onProgress","_progressing","onError","_error","textureLoader","TextureLoader","args","dispatch","loadTexture","path","load","texture","set","replace","has","get","asset","Ball","world","color","spawnPosition","radius","maxSpeed","fixture","material","threeObject","sound","_isHavingContact","_isTouchingGround","init","body","Body","mass","position","userData","shape","Circle","addShape","setDensity","Material","addBody","on","event","bodyA","bodyB","window","assetManager","geometry","SphereGeometry","MeshPhongMaterial","map","bumpMap","bumpScale","Mesh","rotation","x","Math","PI","getFixture","physics","pos","velocity","speed","vec2","length","y","hasTouchingContact","play","isTouchingGround","moveTo","Blob","jumpAllowed","_isTouchingBall","fixedRotation","CylinderGeometry","MeshBasicMaterial","move","handleJump","vel","velDelta","force","applyForce","yVelocity","applyImpulse","fromValues","isTouchingBall","EventEmitter","listeners","eventName","listener","push","i","Field","width","height","dims","parts","materials","ground","leftWall","rightWall","net","bg","createWall","PlaneGeometry","z","depth","opacity","Box","physicsMaterial","BoxGeometry","isNumber","Texture","transparent","isUndefined","mesh","getWorld","getPosition","getDims","getParts","THREEx","KeyboardState","keyCodes","modifiers","self","_onKeyDown","_onKeyChange","_onKeyUp","document","addEventListener","prototype","destroy","removeEventListener","MODIFIERS","ALIAS","pressed","keyCode","shiftKey","ctrlKey","altKey","metaKey","keyDesc","keys","split","key","indexOf","Object","toUpperCase","charCodeAt","OrbitControls","require","fixedTimeStep","maxSubSteps","lastTime","camera","scene","renderer","stats","container","party","screens","getElementById","screenManager","request","initialized","scoreLeftDisplay","scoreRightDisplay","serviceDisplay","scoreNeededToWinDisplay","maximumContactsAllowedDisplay","videoParameterElements","querySelectorAll","controlsElements","rulesElements","initPlayerControls","rules","debug","goTo","loadGame","initGame","component","error","getScreen","classList","add","Scene","PerspectiveCamera","innerWidth","innerHeight","WebGLRenderer","antialias","setSize","setClearColor","clear","appendChild","domElement","controls","render","style","top","pauseGame","preventDefault","e","displayFlashMessage","detail","message","updateScoreUI","onChange","input","srcElement","value","name","getAttribute","enabled","toggle","config","forEach","item","parameter","isNull","onchange","keydownOnInputControl","player","parseInt","controlName","keyTextValue","control","players","setControls","onkeydown","ruleValue","ruleName","onkeyup","newParty","hide","updateRulesUI","newGame","inProgress","pauseState","pause","textContent","scoreToWin","maximumContactsAllowed","winSide","side","scores","left","right","className","charAt","slice","renderLoop","time","requestAnimationFrame","deltaTime","update","cancelAnimationFrame","Party","playersConfig","field","ball","paused","lockPause","playingSide","servingSide","resetScore","clearScene","children","obj","remove","dispatchEvent","CustomEvent","light","HemisphereLight","index","playerConfig","blob","attachBlob","blob1BallMaterial","ContactMaterial","friction","restitution","addContactMaterial","blob2BallMaterial","blob1GroundMaterial","blob2GroundMaterial","ballGroundMaterial","ballLeftWallMaterial","ballRightWallMaterial","ballNetMaterial","meshes","getBlob","endGame","invert","max","values","afterScoring","resetObjects","incrementScore","maxScore","minScore","min","delay","Boolean","applyRules","listenInput","step","resetTouches","currentTouches","Physics","gravity","World","Player","keyboard","setControlForKey","keyBinding","getControlsAntagonistKey","antagonists","antagonistControl","moveBlob","detachBlob","Rules","defaultConfig","extend","ScreenManager","flashMessageElement","flashMessageTextElement","HTMLElement","history","screen","displayScreen","goBack","previousScreen","pop","display","duration","fadeIn","setTimeout","fadeOut","el","last","Date","tick","Sound","sources","audio","createElement","source","src","getAudio","restart","currentTime","stop"],"mappings":"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","file":"public/app.js","sourcesContent":["import EventEmitter from './eventEmitter';\nimport THREE from 'three';\nimport _ from 'lodash';\n\nexport default class AssetManager extends EventEmitter {\n    constructor () {\n        super();\n\n        this.assets = {};\n        this.loadingManager = new THREE.LoadingManager();\n        this.loadingManager.onLoad = this._loaded.bind(this);\n        this.loadingManager.onProgress = this._progressing.bind(this);\n        this.loadingManager.onError = this._error.bind(this);\n        this.textureLoader = new THREE.TextureLoader(this.loadingManager);\n    }\n\n    _loaded (...args) {\n        this.dispatch('loaded', ...args);\n    }\n\n    _progressing (...args) {\n        this.dispatch('progress', ...args);\n    }\n\n    _error (...args) {\n        this.dispatch('error', ...args);\n    }\n\n    loadTexture (path) {\n        this.textureLoader.load(\n            path,\n            (texture) => this.set(path.replace(/\\.[^.]+$/, '').replace('/', '.'), texture)\n        );\n    }\n\n    has (path) {\n        return _.has(this.assets, path);\n    }\n\n    get (path) {\n        return _.get(this.assets, path);\n    }\n\n    set (path, asset) {\n        _.set(this.assets, path, asset);\n        return this;\n    }\n}\n","import THREE from 'three';\nimport Sound from './sound';\nimport p2 from 'p2';\n\nexport default class Ball {\n    constructor (world, color, spawnPosition) {\n        this.world = world;\n        this.color = color;\n        this.spawnPosition = spawnPosition;\n        this.radius = 1.1; // TODO : If we reduce the radius the ball can be stuck against a wall and the blob can't move it\n        this.maxSpeed = 12;\n        this.fixture = null;\n        this.material = null;\n        this.threeObject = null;\n        this.sound = null;\n        this._isHavingContact = false;\n        this._isTouchingGround = false;\n\n        this.init();\n    }\n\n    init () {\n        const body = new p2.Body({\n            mass: 1,\n            position: this.spawnPosition\n        });\n\n        body.userData = 'type_ball';\n\n        const shape = new p2.Circle({\n            radius: this.radius\n        });\n\n        body.addShape(shape);\n        body.setDensity(1);\n\n        this.material = new p2.Material();\n        shape.material = this.material;\n\n        this.world.addBody(body);\n        this.fixture = body;\n\n        this.world.on('beginContact', function (event) {\n            if (event.bodyA !== body && event.bodyB !== body) {\n                return;\n            }\n\n            this._isHavingContact = true;\n\n            if (\n                event.bodyA.userData === 'type_ground' ||\n                event.bodyB.userData === 'type_ground'\n            ) {\n                this._isTouchingGround = true;\n            }\n        }.bind(this));\n\n        this.world.on('endContact', function (event) {\n            if (event.bodyA !== body && event.bodyB !== body) {\n                return;\n            }\n\n            this._isHavingContact = false;\n\n            if (\n                event.bodyA.userData === 'type_ground' ||\n                event.bodyB.userData === 'type_ground'\n            ) {\n                this._isTouchingGround = false;\n            }\n        }.bind(this));\n\n        const texture = window.assetManager.get('textures.ball');\n        const geometry = new THREE.SphereGeometry(this.radius, 64, 64);\n        const material = new THREE.MeshPhongMaterial({\n            map: texture,\n            bumpMap: texture,\n            bumpScale: 0.01\n        });\n        this.threeObject = new THREE.Mesh(geometry, material);\n        this.threeObject.rotation.x += 90 * Math.PI / 180;\n\n        this.sound = new Sound(['sounds/ball.mp3', 'sounds/ball.ogg']);\n    }\n\n    getFixture () {\n        return this.fixture;\n    }\n\n    physics () {\n        const body = this.fixture,\n            pos = body.position,\n            velocity = body.velocity,\n            speed = p2.vec2.length(velocity);\n\n        if (speed > this.maxSpeed) {\n            body.velocity = [\n                this.maxSpeed / speed * velocity[0],\n                this.maxSpeed / speed * velocity[1]\n            ];\n        }\n\n        this.threeObject.position.x = pos[0];\n        this.threeObject.position.y = pos[1];\n\n        if (this.hasTouchingContact()) {\n            this.sound.play(true);\n        }\n    }\n\n    hasTouchingContact () {\n        return this._isHavingContact;\n    }\n\n    isTouchingGround () {\n        return this._isTouchingGround;\n    }\n\n    moveTo (position) {\n        this.fixture.position = position;\n        this.fixture.velocity = [0, 0];\n    }\n}\n","import THREE from 'three';\nimport p2 from 'p2';\n\nexport default class Blob {\n    constructor (world, color, spawnPosition) {\n        this.world = world;\n        this.color = color;\n        this.spawnPosition = spawnPosition;\n        this.fixture = null;\n        this.material = null;\n        this.threeObject = null;\n        this.radius = 1;\n        this.speed = 5;\n        this.jumpAllowed = false;\n        this._isTouchingGround = false;\n        this._isTouchingBall = false;\n\n        this.init();\n    }\n\n    init () {\n        const body = new p2.Body({\n            mass: 100,\n            fixedRotation: true,\n            position: this.spawnPosition\n        });\n\n        const shape = new p2.Circle({\n            radius: this.radius\n        });\n\n        body.addShape(shape);\n        body.setDensity(100);\n\n        this.material = new p2.Material();\n        shape.material = this.material;\n\n        this.world.addBody(body);\n        this.fixture = body;\n\n        this.world.on('beginContact', function (event) {\n            if (event.bodyA !== body && event.bodyB !== body) {\n                return;\n            }\n\n            if (\n                event.bodyA.userData === 'type_ground' ||\n                event.bodyB.userData === 'type_ground'\n            ) {\n                this._isTouchingGround = true;\n            } else if (\n                event.bodyA.userData === 'type_ball' ||\n                event.bodyB.userData === 'type_ball'\n            ) {\n                this._isTouchingBall = true;\n            }\n        }.bind(this));\n\n        this.world.on('endContact', function (event) {\n            if (event.bodyA !== body && event.bodyB !== body) {\n                return;\n            }\n\n            if (\n                event.bodyA.userData === 'type_ground' ||\n                event.bodyB.userData === 'type_ground'\n            ) {\n                this._isTouchingGround = false;\n            } else if (\n                event.bodyA.userData === 'type_ball' ||\n                event.bodyB.userData === 'type_ball'\n            ) {\n                this._isTouchingBall = false;\n            }\n        }.bind(this));\n\n        const geometry = new THREE.CylinderGeometry(this.radius, this.radius, 1, 7, 1, false);\n        const material = new THREE.MeshBasicMaterial({ color: this.color });\n        this.threeObject = new THREE.Mesh(geometry, material);\n        this.threeObject.rotation.x += 90 * Math.PI / 180;\n    }\n\n    getFixture () {\n        return this.fixture;\n    }\n\n    move (x, y) {\n        // Vertical jump\n        if (y > 0) {\n            this.handleJump();\n        }\n\n\n        // Horizontal move\n        if (x !== 0) {\n            const body = this.fixture,\n                vel = body.velocity,\n                velDelta = (this.speed * x) - vel[0],\n                force = body.mass * velDelta / (1 / 60); // TODO 1/60 could change (see main)\n\n            body.applyForce(\n                [force, 0]\n            );\n        }\n    }\n\n    handleJump () {\n        const body = this.fixture,\n            yVelocity = body.velocity[1];\n\n        // Allow jumping\n        if (!this.jumpAllowed && yVelocity < 0.00001 && this.isTouchingGround()) {\n            this.jumpAllowed = true;\n        }\n\n        // Jumping\n        if (this.jumpAllowed) {\n            body.applyImpulse(\n                p2.vec2.fromValues(0, 9 * this.fixture.mass)\n            );\n\n            // Prevent jumping\n            this.jumpAllowed = false;\n        }\n    }\n\n    isTouchingGround () {\n        return this._isTouchingGround;\n    }\n\n    isTouchingBall () {\n        return this._isTouchingBall;\n    }\n\n    physics () {\n        const pos = this.fixture.position;\n        this.threeObject.position.x = pos[0];\n        this.threeObject.position.y = pos[1];\n    }\n\n    moveTo (position) {\n        this.fixture.position = position;\n        this.fixture.velocity = [0, 0];\n    }\n}\n","export default class EventEmitter {\n    constructor () {\n        this.listeners = {};\n    }\n\n    on (eventName, listener) {\n        if (!this.listeners[eventName]) {\n            this.listeners[eventName] = [];\n        }\n\n        this.listeners[eventName].push(listener);\n    }\n\n    dispatch (eventName, ...args) {\n        if (this.listeners[eventName]) {\n            for (let i = 0; i < this.listeners[eventName].length; i++) {\n                this.listeners[eventName][i](this, ...args);\n            }\n        }\n    }\n}\n","import THREE from 'three';\nimport _ from 'lodash';\nimport p2 from 'p2';\n\nexport default class Field {\n    constructor (world, x, y, width, height) {\n        this.world = world;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.position = { x: x, y: y };\n        this.dims = [width, height];\n        this.parts = [];\n        this.materials = [];\n\n        this.init();\n    }\n\n    init () {\n        let ground, leftWall, rightWall, net, bg;\n\n        ground = this.createWall(\n            this.x,\n            this.y - (this.height / 2) - 0.5,\n            this.width,\n            1,\n            20,\n            window.assetManager.get('textures.wood'),\n            0xEEEEEE,\n            null,\n            'type_ground'\n        );\n\n        leftWall = this.createWall(\n            this.x - (this.width / 2) - 0.5,\n            this.y + (this.height / 2),\n            1,\n            this.height * 2,\n            20,\n            null,\n            0xDEDEDE,\n            0\n        );\n\n        rightWall = this.createWall(\n            this.x + (this.width / 2) + 0.5,\n            this.y + (this.height / 2),\n            1,\n            this.height * 2,\n            20,\n            null,\n            0xDEDEDE,\n            0\n        );\n\n        net = this.createWall(\n            this.x,\n            this.y - (this.height / 2) + (this.height / 4),\n            0.3,\n            this.height / 2,\n            20,\n            null,\n            0xDEDEDE,\n            0.8\n        );\n\n        // Background\n        bg = new THREE.Mesh(\n            new THREE.PlaneGeometry(110, 90, 0),\n            new THREE.MeshBasicMaterial({map: window.assetManager.get('textures.background')})\n        );\n\n        bg.position.z = -20;\n        bg.position.y = 12;\n\n        this.parts.push(ground, leftWall, rightWall, net, bg);\n    }\n\n    createWall (x, y, width, height, depth, texture, color, opacity, userData) {\n        const body = new p2.Body({\n            mass: 0,\n            position: [x, y]\n        });\n\n        if (typeof userData !== 'undefined') {\n            body.userData = userData;\n        }\n\n        const shape = new p2.Box({\n            width: width,\n            height: height\n        });\n\n        body.addShape(shape);\n        body.setDensity(1);\n\n        const physicsMaterial = new p2.Material();\n\n        shape.material = physicsMaterial;\n        this.materials.push(physicsMaterial);\n\n        this.world.addBody(body);\n\n        const geometry = width > height\n                ? new THREE.BoxGeometry(width, height, _.isNumber(depth) ? depth : 0)\n                : new THREE.BoxGeometry(width, height, _.isNumber(depth) ? depth : 0)\n            ;\n\n        let material;\n\n        if (texture instanceof THREE.Texture) {\n            material = new THREE.MeshBasicMaterial({\n                map: texture,\n                transparent: true\n            });\n        } else {\n            material = new THREE.MeshBasicMaterial({\n                color: !_.isUndefined(color) ? color : 0x000000,\n                opacity: !_.isUndefined(opacity) ? opacity : 1,\n                transparent: true\n            });\n        }\n\n        const mesh = new THREE.Mesh(\n            geometry,\n            material\n        );\n        mesh.position.x = body.position[0];\n        mesh.position.y = body.position[1];\n\n        return mesh;\n    }\n\n    getWorld () {\n        return this.world;\n    }\n\n    getPosition () {\n        return this.position;\n    }\n\n    getDims () {\n        return this.dims;\n    }\n\n    getParts () {\n        return this.parts;\n    }\n}\n","export default {\n    0: \"\\\\\",\n    8: \"backspace\",\n    9: \"tab\",\n    12: \"num\",\n    13: \"enter\",\n    16: \"shift\",\n    17: \"ctrl\",\n    18: \"alt\",\n    19: \"pause\",\n    20: \"caps\",\n    27: \"esc\",\n    32: \"space\",\n    33: \"pageup\",\n    34: \"pagedown\",\n    35: \"end\",\n    36: \"home\",\n    37: \"left\",\n    38: \"up\",\n    39: \"right\",\n    40: \"down\",\n    44: \"print\",\n    45: \"insert\",\n    46: \"delete\",\n    48: \"0\",\n    49: \"1\",\n    50: \"2\",\n    51: \"3\",\n    52: \"4\",\n    53: \"5\",\n    54: \"6\",\n    55: \"7\",\n    56: \"8\",\n    57: \"9\",\n    65: \"a\",\n    66: \"b\",\n    67: \"c\",\n    68: \"d\",\n    69: \"e\",\n    70: \"f\",\n    71: \"g\",\n    72: \"h\",\n    73: \"i\",\n    74: \"j\",\n    75: \"k\",\n    76: \"l\",\n    77: \"m\",\n    78: \"n\",\n    79: \"o\",\n    80: \"p\",\n    81: \"q\",\n    82: \"r\",\n    83: \"s\",\n    84: \"t\",\n    85: \"u\",\n    86: \"v\",\n    87: \"w\",\n    88: \"x\",\n    89: \"y\",\n    90: \"z\",\n    91: \"cmd\",\n    92: \"cmd\",\n    93: \"cmd\",\n    96: \"num_0\",\n    97: \"num_1\",\n    98: \"num_2\",\n    99: \"num_3\",\n    100: \"num_4\",\n    101: \"num_5\",\n    102: \"num_6\",\n    103: \"num_7\",\n    104: \"num_8\",\n    105: \"num_9\",\n    106: \"num_multiply\",\n    107: \"num_add\",\n    108: \"num_enter\",\n    109: \"num_subtract\",\n    110: \"num_decimal\",\n    111: \"num_divide\",\n    124: \"print\",\n    144: \"num\",\n    145: \"scroll\",\n    186: \";\",\n    187: \"=\",\n    188: \",\",\n    189: \"-\",\n    190: \".\",\n    191: \"/\",\n    192: \"`\",\n    219: \"[\",\n    220: \"\\\\\",\n    221: \"]\",\n    222: \"\\'\",\n    223: \"`\",\n    224: \"cmd\",\n    225: \"alt\",\n    57392: \"ctrl\",\n    63289: \"num\"\n};\n","// THREEx.KeyboardState.js keep the current state of the keyboard.\n// It is possible to query it at any time. No need of an event.\n// This is particularly convenient in loop driven case, like in\n// 3D demos or games.\n//\n// # Usage\n//\n// **Step 1**: Create the object\n//\n// ```var keyboard\t= new THREEx.KeyboardState();```\n//\n// **Step 2**: Query the keyboard state\n//\n// This will return true if shift and A are pressed, false otherwise\n//\n// ```keyboard.pressed(\"shift+A\")```\n//\n// **Step 3**: Stop listening to the keyboard\n//\n// ```keyboard.destroy()```\n//\n// NOTE: this library may be nice as standaline. independant from three.js\n// - rename it keyboardForGame\n//\n// # Code\n//\n\n/** @namespace */\nvar THREEx\t= THREEx \t\t|| {};\n\n/**\n * - NOTE: it would be quite easy to push event-driven too\n *   - microevent.js for events handling\n *   - in this._onkeyChange, generate a string from the DOM event\n *   - use this as event name\n*/\nTHREEx.KeyboardState\t= function()\n{\n\t// to store the current state\n\tthis.keyCodes\t= {};\n\tthis.modifiers\t= {};\n\n\t// create callback to bind/unbind keyboard events\n\tvar self\t= this;\n\tthis._onKeyDown\t= function(event){ self._onKeyChange(event, true); };\n\tthis._onKeyUp\t= function(event){ self._onKeyChange(event, false);};\n\n\t// bind keyEvents\n\tdocument.addEventListener(\"keydown\", this._onKeyDown, false);\n\tdocument.addEventListener(\"keyup\", this._onKeyUp, false);\n};\n\n/**\n * To stop listening of the keyboard events\n*/\nTHREEx.KeyboardState.prototype.destroy\t= function()\n{\n\t// unbind keyEvents\n\tdocument.removeEventListener(\"keydown\", this._onKeyDown, false);\n\tdocument.removeEventListener(\"keyup\", this._onKeyUp, false);\n};\n\nTHREEx.KeyboardState.MODIFIERS\t= ['shift', 'ctrl', 'alt', 'meta'];\nTHREEx.KeyboardState.ALIAS\t= {\n\t'left'\t\t: 37,\n\t'up'\t\t: 38,\n\t'right'\t\t: 39,\n\t'down'\t\t: 40,\n\t'space'\t\t: 32,\n\t'pageup'\t: 33,\n\t'pagedown'\t: 34,\n\t'enter'\t\t: 13,\n\t'tab'\t\t: 9,\n\t'escape'\t: 27\n};\n\n/**\n * to process the keyboard dom event\n*/\nTHREEx.KeyboardState.prototype._onKeyChange\t= function(event, pressed)\n{\n\t// log to debug\n\t//console.log(\"onKeyChange\", event, pressed, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n\t// update this.keyCodes\n\tvar keyCode\t\t= event.keyCode;\n\tthis.keyCodes[keyCode]\t= pressed;\n\n\t// update this.modifiers\n\tthis.modifiers['shift']= event.shiftKey;\n\tthis.modifiers['ctrl']\t= event.ctrlKey;\n\tthis.modifiers['alt']\t= event.altKey;\n\tthis.modifiers['meta']\t= event.metaKey;\n};\n\n/**\n * query keyboard state to know if a key is pressed of not\n *\n * @param {String} keyDesc the description of the key. format : modifiers+key e.g shift+A\n * @returns {Boolean} true if the key is pressed, false otherwise\n*/\nTHREEx.KeyboardState.prototype.pressed\t= function(keyDesc)\n{\n\tvar keys\t= keyDesc.split(\"+\");\n\tfor(var i = 0; i < keys.length; i++){\n\t\tvar key\t\t= keys[i];\n\t\tvar pressed;\n\t\tif( THREEx.KeyboardState.MODIFIERS.indexOf( key ) !== -1 ){\n\t\t\tpressed\t= this.modifiers[key];\n\t\t}else if( Object.keys(THREEx.KeyboardState.ALIAS).indexOf( key ) != -1 ){\n\t\t\tpressed\t= this.keyCodes[ THREEx.KeyboardState.ALIAS[key] ];\n\t\t}else {\n\t\t\tpressed\t= this.keyCodes[key.toUpperCase().charCodeAt(0)];\n\t\t}\n\t\tif( !pressed)\treturn false;\n\t};\n\treturn true;\n};\n\nexport default THREEx.KeyboardState;\n","import _ from 'lodash';\nimport Stats from 'stats.js';\nimport THREE from 'three';\nimport THREExWindowResize from 'three-window-resize';\nimport screenfull from 'screenfull';\nimport ScreenManager from './screensManager';\nimport Party from './party';\nimport Rules from './rules';\nimport keycodeDictionary from './keycodeDictionary';\nimport AssetManager from './assetManager';\n\nconst OrbitControls = require('three-orbit-controls')(THREE);\n\n// Variables\nconst fixedTimeStep = 1 / 60;\nconst maxSubSteps = 10;\nlet lastTime;\nlet camera, scene, renderer, stats, container,\n    party,\n    screens = {\n        \"loadingMenu\": document.getElementById(\"loadingMenu\"),\n        \"mainMenu\": document.getElementById(\"mainMenu\"),\n        \"pauseMenu\": document.getElementById(\"pauseMenu\"),\n        \"gameOverMenu\": document.getElementById(\"gameOverMenu\"),\n        \"optionsMenu\": document.getElementById(\"optionsMenu\"),\n        \"videoMenu\": document.getElementById(\"videoMenu\"),\n        \"controlsMenu\": document.getElementById(\"controlsMenu\"),\n        \"rulesMenu\": document.getElementById(\"rulesMenu\")\n    },\n    screenManager = new ScreenManager(\n        screens,\n        document.getElementById(\"flashMessage\"),\n        document.getElementById(\"flashText\")\n    ),\n    assetManager = new AssetManager(),\n    request,\n    initialized = false,\n    scoreLeftDisplay = document.getElementById(\"scoreLeftDisplay\"),\n    scoreRightDisplay = document.getElementById(\"scoreRightDisplay\"),\n    serviceDisplay = document.getElementById(\"serviceDisplay\"),\n    scoreNeededToWinDisplay = document.getElementById(\"scoreNeededToWinDisplay\"),\n    maximumContactsAllowedDisplay = document.getElementById(\"maximumContactsAllowedDisplay\"),\n    videoParameterElements = screens['videoMenu'].querySelectorAll('.videoParameterElement'),\n    controlsElements = screens['controlsMenu'].querySelectorAll('.controlKey'),\n    rulesElements = screens['rulesMenu'].querySelectorAll('.ruleElement'),\n    initPlayerControls = [\n        {\n            'up': 'z',\n            'right': 'd',\n            'left': 'q'\n        },\n        {\n            'up': 'up',\n            'right': 'right',\n            'left': 'left'\n        }\n    ],\n    rules = new Rules(),\n    debug = false\n    ;\n\n// Bootstrap\ninit();\n\n// Init\nfunction init() {\n    if (initialized) {\n        return;\n    }\n\n    initialized = true;\n\n    // Load game\n    screenManager.goTo(\"loadingMenu\");\n    loadGame();\n}\n\n// Load game\nfunction loadGame () {\n    // Assets\n    assetManager.on('loaded', initGame);\n    assetManager.on('error', (component, error) => {\n        screenManager.getScreen('loadingMenu').classList.add('error');\n        throw error;\n    });\n    assetManager.loadTexture('textures/wood.jpg');\n    assetManager.loadTexture('textures/background.jpg');\n    assetManager.loadTexture('textures/ball.jpg');\n}\n\n// Init game\nfunction initGame() {\n    // Scene\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 1);\n    renderer.clear();\n    container = document.body;\n    container.appendChild(renderer.domElement);\n\n    // Camera default position\n    camera.position.set(0, 4, 12);\n    camera.rotation.x = -5 * Math.PI / 180;\n\n    if (debug) {\n        const controls = new OrbitControls( camera );\n        controls.addEventListener( 'change', render );\n    }\n\n    // Window resizing\n    THREExWindowResize(renderer, camera);\n\n    // Stats\n    stats = new Stats();\n    stats.domElement.style.position = 'absolute';\n    stats.domElement.style.top = '0px';\n    container.appendChild(stats.domElement);\n\n    // Pause party (space bar)\n    document.addEventListener('keyup', function (event) {\n        if (event.keyCode === 32) {\n            pauseGame();\n        }\n    });\n\n    /* Events */\n    // Prevent F11 to toggle fullscreen, go to video options instead\n    document.addEventListener('keydown', function (event) {\n        if (event.keyCode === 122) {\n            event.preventDefault();\n            screenManager.goTo('optionsMenu').goTo('videoMenu');\n        }\n    });\n\n    // End game event listener\n    window.addEventListener(\"endGame\", function(e) {\n        screenManager.displayFlashMessage(e.detail.message);\n        pauseGame();\n\n        screenManager.goTo(\"gameOverMenu\");\n    });\n\n    // Score event listener\n    window.addEventListener(\"score\", updateScoreUI);\n\n    // Video menu is displayed, listen keyboard event on inputs\n    screenManager.on(\"videoMenu\", function() {\n        const onChange = function (e) {\n            const input = e.srcElement;\n            const value = input.value;\n            const name = input.getAttribute('data-parameter');\n\n            // Fullscreen\n            if (name === 'fullscreen' && screenfull.enabled) {\n                screenfull.toggle();\n                return;\n            }\n\n            rules.config[name] = value;\n            input.value = value;\n        };\n\n        _.forEach(videoParameterElements, function (item) {\n            const parameter = item.getAttribute('data-parameter');\n            item.value = rules.config[parameter];\n\n            if (_.isNull(item.onchange)) {\n                item.onchange = onChange;\n            }\n        });\n    });\n\n    // Control menu is displayed, listen keyboard event on inputs\n    screenManager.on(\"controlsMenu\", function() {\n        const keydownOnInputControl = function(e) {\n            const input = e.srcElement;\n            const player = parseInt(input.getAttribute('data-player'));\n            const controlName = input.getAttribute('data-control');\n            const keyTextValue = keycodeDictionary[e.keyCode];\n\n            input.value = keyTextValue;\n\n            // TODO handle control configuration before the party is initialized\n            initPlayerControls[player][controlName] = keyTextValue;\n\n            if (party) {\n                const control = {};\n                control[controlName] = keyTextValue;\n                party.players[player].setControls(control)\n            }\n\n            return false;\n        };\n\n        _.forEach(controlsElements, function(item) {\n            const player = parseInt(item.getAttribute('data-player'));\n            const controlName = item.getAttribute('data-control');\n            item.value = initPlayerControls[player][controlName];\n\n            if (_.isNull(item.onkeydown)) {\n                item.onkeydown = keydownOnInputControl;\n            }\n        });\n    });\n\n    // Rules menu is displayed, listen keyboard event on inputs\n    screenManager.on(\"rulesMenu\", function() {\n        const keydownOnInputControl = function(e) {\n            const input = e.srcElement;\n            const ruleValue = parseInt(input.value);\n            const ruleName = input.getAttribute('data-ruleName');\n            rules.config[ruleName] = ruleValue;\n            input.value = ruleValue;\n        };\n\n        _.forEach(rulesElements, function(item) {\n            const ruleName = item.getAttribute('data-ruleName');\n            item.value = rules.config[ruleName];\n\n            if (_.isNull(item.onkeyup)) {\n                item.onkeyup = keydownOnInputControl;\n            }\n        });\n    });\n\n    // Display main menu\n    screenManager.goTo(\"mainMenu\");\n}\n\nfunction newParty() {\n    screenManager.hide();\n    screenManager.displayFlashMessage(\"Game starts !\");\n\n    updateRulesUI(rules);\n\n    // Party\n    party = new Party(\n        scene,\n        rules,\n        [\n            {\n                name: 'P1',\n                controls: initPlayerControls[0],\n                position: 'left'\n            },\n            {\n                name: 'P2',\n                controls: initPlayerControls[1],\n                position: 'right'\n            }\n        ]\n    );\n    party.newGame();\n\n    render();\n}\n\nfunction pauseGame() {\n    if (!party.inProgress)\n        return;\n\n    const pauseState = party.pause();\n\n    if (pauseState) {\n        screenManager.goTo(\"pauseMenu\");\n    } else {\n        screenManager.hide();\n    }\n}\n\nfunction updateRulesUI(rules) {\n    scoreNeededToWinDisplay.textContent = rules.config.scoreToWin;\n    maximumContactsAllowedDisplay.textContent = rules.config.maximumContactsAllowed;\n}\n\nfunction updateScoreUI(event) {\n    const winSide = event.detail.side,\n        scores = event.detail.scores\n        ;\n\n    scoreLeftDisplay.textContent = scores.left;\n    scoreRightDisplay.textContent = scores.right;\n    serviceDisplay.className = winSide;\n    serviceDisplay.textContent = winSide.charAt(0).toUpperCase() + winSide.slice(1);\n}\n\n// Animation loop\nfunction renderLoop(time) {\n    request = requestAnimationFrame(renderLoop);\n\n    // Sync physics with time (compute elapsed time since last render frame)\n    var deltaTime = lastTime ? (time - lastTime) / 1000 : 0;\n\n    party.update(fixedTimeStep, deltaTime, maxSubSteps);\n\n    // Update stats\n    stats.update();\n\n    renderer.render(scene, camera);\n}\n\n// Launch animation\nfunction render() {\n    if (!_.isUndefined(request)) {\n        cancelAnimationFrame(request);\n    }\n\n    request = requestAnimationFrame(renderLoop);\n}\n\n// FIXME Do not store into window\nwindow.newParty = newParty;\nwindow.pauseGame = pauseGame;\nwindow.screenManager = screenManager;\nwindow.assetManager = assetManager;\n","import THREE from 'three';\nimport _ from 'lodash';\nimport p2 from 'p2';\n\nimport Ball from './ball';\nimport Blob from './blob';\nimport Field from './field';\nimport Player from './player';\nimport Physics from './physics';\n\nexport default class Party {\n    constructor (scene, rules, playersConfig) {\n        this.scene = scene;\n        this.rules = rules;\n        this.playersConfig = playersConfig;\n        this.physics = null;\n        this.field = null;\n        this.players = null;\n        this.ball = null;\n        this.scores = null;\n        this.paused = false;\n        this.lockPause = false;\n        this.playingSide = null;\n        this.servingSide = null;\n        this.inProgress = null;\n\n        this.init();\n    }\n\n    init () {\n        this.resetScore();\n    }\n\n    clearScene () {\n        for (let i = this.scene.children.length - 1; i >= 0; i --) {\n            let obj = this.scene.children[i];\n            this.scene.remove(obj);\n        }\n    }\n\n    resetScore () {\n        this.scores = {\n            left: 0,\n            right: 0\n        };\n\n        // Dispatch score event\n        window.dispatchEvent(\n            new CustomEvent(\n                'score',\n                {detail: {side: 'left', scores: this.scores}}\n            )\n        );\n    }\n\n    newGame () {\n        // Clear scene\n        this.clearScene();\n\n        // Reset score\n        this.resetScore();\n\n        // Lightning\n        // TODO Better lightning\n        const light = new THREE.HemisphereLight(0xffffff, 0xffffff, 1);\n        this.scene.add(light);\n\n        // Physics\n        this.physics = new Physics(10);\n\n        // Field\n        this.field = new Field(this.physics.getWorld(), 0, 0, 22, 10);\n\n        // Players\n        this.players = [];\n\n        for (let index in this.playersConfig) {\n            const playerConfig = this.playersConfig[index];\n            let blob,\n                position,\n                color,\n                player\n            ;\n\n            position = [playerConfig.position === 'left' ? -5 : 5, -4];\n            color = playerConfig.position === 'left' ? 0xff0000 : 0x0000ff;\n\n            blob = new Blob(this.physics.getWorld(), color, position);\n            player = new Player(playerConfig.name, playerConfig.controls, playerConfig.position);\n            player.attachBlob(blob);\n\n            this.players.push(player);\n        }\n\n        // Ball\n        this.ball = new Ball(this.physics.getWorld(), 0xff000, [-5, 5]);\n\n        // Contact blob / ball\n        const blob1BallMaterial = new p2.ContactMaterial(this.players[0].blob.material, this.ball.material, {\n            friction: 0,\n            restitution: 1.1\n        });\n        this.physics.getWorld().addContactMaterial(blob1BallMaterial);\n\n        const blob2BallMaterial = new p2.ContactMaterial(this.players[1].blob.material, this.ball.material, {\n            friction: 0,\n            restitution: 1.1\n        });\n        this.physics.getWorld().addContactMaterial(blob2BallMaterial);\n\n        // Contact blob / field\n        const blob1GroundMaterial = new p2.ContactMaterial(this.players[0].blob.material, this.field.materials[0], {\n            friction: 2,\n            restitution: 0\n        });\n        this.physics.getWorld().addContactMaterial(blob1GroundMaterial);\n\n        const blob2GroundMaterial = new p2.ContactMaterial(this.players[1].blob.material, this.field.materials[0], {\n            friction: 2,\n            restitution: 0\n        });\n        this.physics.getWorld().addContactMaterial(blob2GroundMaterial);\n\n        // TODO blob vs walls/net\n\n        // Contact ball / field\n        const ballGroundMaterial = new p2.ContactMaterial(this.ball.material, this.field.materials[0], {\n            friction: 0,\n            restitution: 1\n        });\n        this.physics.getWorld().addContactMaterial(ballGroundMaterial);\n\n        const ballLeftWallMaterial = new p2.ContactMaterial(this.ball.material, this.field.materials[1], {\n            friction: 0,\n            restitution: 1\n        });\n        this.physics.getWorld().addContactMaterial(ballLeftWallMaterial);\n\n        const ballRightWallMaterial = new p2.ContactMaterial(this.ball.material, this.field.materials[2], {\n            friction: 0,\n            restitution: 1\n        });\n        this.physics.getWorld().addContactMaterial(ballRightWallMaterial);\n\n        const ballNetMaterial = new p2.ContactMaterial(this.ball.material, this.field.materials[3], {\n            friction: 0,\n            restitution: 1\n        });\n        this.physics.getWorld().addContactMaterial(ballNetMaterial);\n\n        // Serving side\n        this.servingSide = 'left';\n\n        // Add all meshes to the scene\n        const meshes = [\n            ...this.field.getParts(),\n            ..._.map(this.players, (player) => player.getBlob().threeObject),\n            this.ball.threeObject\n        ];\n\n        for (let i in meshes) {\n            this.scene.add(meshes[i]);\n        }\n\n        if (this.paused) {\n            this.pause(false);\n        }\n\n        this.inProgress = true;\n    }\n\n    endGame () {\n        this.inProgress = false;\n\n        window.dispatchEvent(\n            new CustomEvent(\n                'endGame',\n                {detail: {message: _.invert(this.scores)[_.max(_.values(this.scores))] + ' player wins'}}\n            )\n        );\n    }\n\n    afterScoring (winSide) {\n        this.playingSide = null;\n        let resetObjects = true;\n\n        // Internal pause\n        this.pause(true);\n        this.lockPause = true;\n\n        if (winSide === this.servingSide) {\n            this.incrementScore(winSide);\n\n            // End of game\n            const maxScore = _.max(_.values(this.scores)),\n                minScore = _.min(_.values(this.scores))\n            ;\n\n            if (maxScore >= this.rules.config.scoreToWin && maxScore - minScore > 1) {\n                this.endGame();\n                resetObjects = false;\n            }\n        } else {\n            this.servingSide = winSide;\n        }\n\n        // Dispatch score event\n        window.dispatchEvent(\n            new CustomEvent(\n                'score',\n                {detail: {side: winSide, scores: this.scores}}\n            )\n        );\n\n        if (resetObjects) {\n            // Reset objects\n            this.ball.moveTo([winSide === 'left' ? -5 : 5, 5]);\n\n            _.forEach(this.players, function (player) {\n                player.blob.moveTo([player.side === 'left' ? -5 : 5, -4]);\n            });\n\n            _.delay(function () {\n                this.lockPause = false;\n                this.pause(false);\n            }.bind(this), 1000);\n        }\n    }\n\n    pause (pause) {\n        if (this.lockPause) {\n            throw 'Pause is locked';\n        }\n\n        this.paused = !_.isUndefined(pause) ? Boolean(pause) : !this.paused;\n        return this.paused;\n    }\n\n    update (fixedTimeStep, deltaTime, maxSubSteps) {\n        if (this.paused || !this.inProgress) {\n            return;\n        }\n\n        this.applyRules();\n\n        for (let i in this.players) {\n            this.players[i].listenInput();\n            this.players[i].getBlob().physics();\n        }\n\n        this.ball.physics();\n        this.physics.step(fixedTimeStep, deltaTime, maxSubSteps);\n    }\n\n    applyRules () {\n        let winSide = null,\n            resetTouches = false\n        ;\n\n        // Ball touching ground\n        if (this.ball.isTouchingGround()) {\n            winSide = this.ball.threeObject.position.x > 0 ? 'left' : 'right';\n\n        // Counting maximum touches\n        } else {\n            _.forEach(this.players, function (player) {\n                if (player.getBlob().isTouchingBall()) {\n                    player.currentTouches++;\n\n                    if (player.side !== this.playingSide) {\n                        // Switching side, reset touches\n                        if (!_.isNull(this.playingSide)) {\n                            resetTouches = true;\n                        }\n\n                        this.playingSide = player.side;\n                    }\n                }\n\n                // Maximum touches reached\n                if (player.currentTouches > this.rules.config.maximumContactsAllowed) {\n                    winSide = player.side === 'right' ? 'left' : 'right';\n                    resetTouches = true;\n                }\n            }.bind(this));\n        }\n\n        // Reset touches count\n        if (resetTouches) {\n            _.forEach(this.players, function (player) {\n                player.currentTouches = 0;\n            });\n        }\n\n        // We have a winner for this round\n        if (winSide) {\n            this.afterScoring(winSide);\n        }\n    }\n\n    incrementScore (side) {\n        this.scores[side]++;\n    }\n}\n","import _ from 'lodash';\nimport p2 from 'p2';\n\nexport default class Physics {\n    constructor (gravity) {\n        this.gravity = _.isNumber(gravity) ? gravity : 100;\n        this.world = null;\n\n        this.init();\n    }\n\n    init () {\n        this.world = new p2.World({\n            gravity: [0, -this.gravity]\n        });\n    }\n\n    getWorld () {\n        return this.world;\n    }\n\n    step (fixedTimeStep, deltaTime, maxSubSteps) {\n        this.world.step(fixedTimeStep, deltaTime, maxSubSteps);\n    }\n}\n","import _ from 'lodash';\nimport THREExKeyboardState from './libs/THREEx.KeyboardState';\n\nexport default class Player {\n    constructor (name, controls, side) {\n        this.name = name;\n        this.controls = controls;\n        this.side = side;\n        this.keyboard = new THREExKeyboardState();\n        this.blob = null;\n        this.currentTouches = 0;\n    }\n\n    setControls (controls) {\n        _.forEach(controls, function(value, key) {\n            this.setControlForKey(key, value);\n        }.bind(this));\n    }\n\n    setControlForKey (key, keyBinding) {\n        if (_.isUndefined(this.controls[key])) {\n            throw \"This control does not exist\";\n        }\n\n        this.controls[key] = keyBinding;\n    }\n\n    getControlsAntagonistKey (key) {\n        const antagonists = {\n            'left': 'right',\n            'right': 'left'\n        };\n\n        return antagonists[key];\n    }\n\n    listenInput () {\n        let x = 0,\n            y = 0;\n\n        for (let key in this.controls) {\n            const control = this.controls[key],\n                antagonistControl = this.controls[this.getControlsAntagonistKey(key)]\n            ;\n\n            if (\n                this.keyboard.pressed(control)\n                &&\n                (\n                    typeof antagonistControl === 'undefined' || !this.keyboard.pressed(antagonistControl)\n                )\n            ) {\n                switch (key) {\n                case 'up':\n                    y = 1;\n                    break;\n                case 'right':\n                    x = 1;\n                    break;\n                case 'left':\n                    x = -1;\n                    break;\n                }\n\n                this.moveBlob(x, y);\n            }\n        }\n    }\n\n    attachBlob (blob) {\n        this.blob = blob;\n    }\n\n    detachBlob () {\n        this.blob = null;\n    }\n\n    getBlob () {\n        return this.blob;\n    }\n\n    moveBlob (x, y) {\n        if (this.blob !== null) {\n            this.blob.move(x, y);\n        }\n    }\n}\n","import _ from 'lodash';\n\nexport default class Rules {\n    constructor (config) {\n        this.defaultConfig = {\n            maximumContactsAllowed: 3,\n            scoreToWin: 25\n        };\n        this.config = _.extend({}, this.defaultConfig, config);\n    }\n}\n","import _ from 'lodash';\nimport EventEmitter from './eventEmitter';\n\nexport default class ScreenManager extends EventEmitter {\n    constructor (screens, flashMessageElement, flashMessageTextElement) {\n        super();\n\n        _.forEach(screens, function (item) {\n            if (!(item instanceof HTMLElement)) {\n                throw \"Screen must be an instance of HTMLElement\";\n            }\n        });\n\n        if (!(flashMessageElement instanceof HTMLElement)) {\n            throw \"flashMessageElement must be an instance of HTMLElement\";\n        }\n\n        if (!(flashMessageTextElement instanceof HTMLElement)) {\n            throw \"flashMessageTextElement must be an instance of HTMLElement\";\n        }\n\n        this.screens = screens;\n        this.flashMessageElement = flashMessageElement;\n        this.flashMessageTextElement = flashMessageTextElement;\n        this.history = [];\n        this.listeners = {};\n    }\n\n    goTo (screen) {\n        this.displayScreen(screen);\n        this.history.push(screen);\n        return this;\n    }\n\n    goBack () {\n        const index = this.history.length-2;\n\n        if (index >= 0) {\n            const previousScreen = this.history[index];\n            if (previousScreen) {\n                this.displayScreen(previousScreen);\n                this.history.pop();\n            }\n        }\n    }\n\n    getScreen (name) {\n        if (_.isUndefined(this.screens[name])) {\n            throw `Screen ${name} does not exist`;\n        }\n\n        return this.screens[name];\n    }\n\n    displayScreen (name) {\n        const screen = this.getScreen(name);\n\n        this.dispatch(name);\n        this.hide();\n        screen.style.display = 'block';\n    }\n\n    hide () {\n        _.forEach(this.screens, function (item) {\n            item.style.display = 'none';\n        });\n    }\n\n    displayFlashMessage (message, duration) {\n        this.flashMessageTextElement.textContent = message;\n        this.fadeIn(this.flashMessageElement);\n\n        setTimeout(function () {\n            this.fadeOut(this.flashMessageElement)\n        }.bind(this), duration ? duration : 2000);\n    }\n\n    fadeIn (el) {\n        el.style.display = 'block';\n        el.style.opacity = 0;\n\n        let last = +new Date();\n        const tick = function () {\n            el.style.opacity = +el.style.opacity + (new Date() - last) / 400;\n            last = +new Date();\n\n            if (+el.style.opacity < 1) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16)\n            }\n        };\n\n        tick();\n    }\n\n    fadeOut (el) {\n        el.style.display = 'block';\n        el.style.opacity = 1;\n\n        let last = +new Date();\n        const tick = function () {\n            el.style.opacity -= (new Date() - last) / 400;\n            last = +new Date();\n\n            if (+el.style.opacity > 0) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16)\n            }\n        };\n\n        tick();\n    }\n}\n","export default class Sound {\n    constructor (sources) {\n        this.sources = sources;\n        this.audio = null;\n\n        this.init();\n    }\n\n    init () {\n        this.audio = document.createElement('audio');\n\n        for (let i = 0; i < this.sources.length; i++) {\n            const source = document.createElement('source');\n            source.src = this.sources[i];\n            this.audio.appendChild(source);\n        }\n    }\n\n    getAudio () {\n       return this.audio;\n    }\n\n    play (restart) {\n        if (restart === true && this.audio.currentTime > 0) {\n            this.stop();\n        }\n\n        this.audio.play();\n    }\n\n    stop () {\n        this.audio.currentTime = 0;\n    }\n}\n"]}